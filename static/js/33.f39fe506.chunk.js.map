{"version":3,"sources":["core/config/layout.ts","core/components/SettingsDrawer.tsx","core/components/Footer.tsx","landing/components/LandingLayout.tsx","landing/pages/Landing.tsx"],"names":["drawerCollapsedWidth","drawerWidth","SettingsDrawer","onDrawerToggle","open","useSettings","changeCollapsed","changeLanguage","changeMode","collapsed","language","mode","t","useTranslation","console","log","anchor","onClose","sx","width","height","variant","display","justifyContent","alignItems","p","color","onClick","edge","gutterBottom","id","marginTop","aria-label","name","onChange","event","target","value","control","label","exclusive","fullWidth","_","Footer","Box","component","Typography","align","Link","RouterLink","to","process","Date","getFullYear","LandingLayout","children","useState","settingsOpen","setSettingsOpen","handleSettingsToggle","Paper","square","AppBar","position","Toolbar","Logo","size","mr","noWrap","flexGrow","IconButton","features","Landing","userInfo","useAuth","theme","useTheme","py","Container","maxWidth","marginBottom","Stack","pt","direction","spacing","Button","firstName","alt","src","palette","style","borderRadius","borderStyle","borderWidth","borderColor","background","default","List","map","feature","index","ListItem","ListItemAvatar","Avatar","ListItemText","primary","href","rel","mt"],"mappings":"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","file":"static/js/33.f39fe506.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\r\nexport const drawerWidth = 280;\r\n","import Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {drawerWidth} from \"../config/layout\";\r\nimport {useSettings} from \"../contexts/SettingsProvider\";\r\nimport React from \"react\";\r\nimport {Languages} from \"../utils/langConfigs\";\r\n\r\ntype SettingsDrawerProps = {\r\n    onDrawerToggle: () => void;\r\n    open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({onDrawerToggle, open}: SettingsDrawerProps) => {\r\n    const {\r\n        changeCollapsed,\r\n        changeLanguage,\r\n        changeMode,\r\n        collapsed,\r\n        language,\r\n        mode,\r\n    } = useSettings();\r\n    const { t} = useTranslation();\r\n    console.log({language})\r\n\r\n    const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeLanguage((event.target as HTMLInputElement).value as Languages);\r\n    };\r\n\r\n    const handleModeChange = (_: any, mode: string) => {\r\n        changeMode(mode);\r\n    };\r\n\r\n    const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n        changeCollapsed(collapsed);\r\n    };\r\n\r\n\r\n    return (\r\n        <Drawer\r\n            anchor=\"top\"\r\n            open={open}\r\n            onClose={onDrawerToggle}\r\n            sx={{\r\n                \"& .MuiDrawer-paper\": {\r\n                    width: drawerWidth,\r\n                    height: \"100%\"\r\n                },\r\n            }}\r\n            variant=\"temporary\"\r\n        >\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    p: 2,\r\n                }}\r\n\r\n            >\r\n                <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n                <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n                    <Close/>\r\n                </IconButton>\r\n            </Box>\r\n            <Box sx={{p: 2}}>\r\n                <Typography\r\n                    gutterBottom\r\n                    id=\"settings-language\"\r\n                    marginTop={3}\r\n                    variant=\"h6\"\r\n                >\r\n                    {t(\"settings.drawer.language.label\")}\r\n                </Typography>\r\n                <FormControl>\r\n                    <RadioGroup\r\n                        aria-label=\"language\"\r\n                        name=\"language-radio-group\"\r\n                        onChange={handleLanguageChange}\r\n                        value={language}\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"en\"\r\n                            control={<Radio/>}\r\n                            label={t<string>(\"settings.drawer.language.options.en\")}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"fa\"\r\n                            control={<Radio/>}\r\n                            label={t<string>(\"settings.drawer.language.options.fa\")}\r\n                        />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n                    {t(\"settings.drawer.mode.label\")}\r\n                </Typography>\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={mode}\r\n                    exclusive\r\n                    fullWidth\r\n                    onChange={handleModeChange}\r\n                >\r\n                    <ToggleButton value=\"light\">\r\n                        {t(\"settings.drawer.mode.options.light\")}\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"dark\">\r\n                        {t(\"settings.drawer.mode.options.dark\")}\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Typography\r\n                    gutterBottom\r\n                    id=\"settings-sidebar\"\r\n                    marginTop={3}\r\n                    variant=\"h6\"\r\n                >\r\n                    {t(\"settings.drawer.sidebar.label\")}\r\n                </Typography>\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={collapsed}\r\n                    exclusive\r\n                    fullWidth\r\n                    onChange={handleSidebarChange}\r\n                >\r\n                    <ToggleButton value={true}>\r\n                        {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n                    </ToggleButton>\r\n                    <ToggleButton value={false}>\r\n                        {t(\"settings.drawer.sidebar.options.full\")}\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Box>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n","import Box from \"@mui/material/Box\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Box sx={{ p: 6 }} component=\"footer\">\r\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n        {\"© \"}\r\n        <Link\r\n          color=\"inherit\"\r\n          component={RouterLink}\r\n          to={`/${process.env.PUBLIC_URL}/`}\r\n        >\r\n          {process.env.REACT_APP_NAME}\r\n        </Link>{\" \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import AppBar from \"@mui/material/AppBar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport React, { useState } from \"react\";\r\nimport Footer from \"../../core/components/Footer\";\r\nimport Logo from \"../../core/components/Logo\";\r\nimport SettingsDrawer from \"../../core/components/SettingsDrawer\";\r\n\r\ntype LandingLayoutProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst LandingLayout = ({ children }: LandingLayoutProps) => {\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n\r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  return (\r\n    <Paper square>\r\n      <AppBar color=\"transparent\" position=\"relative\">\r\n        <Toolbar>\r\n          <Logo size={24} sx={{ mr: 2 }} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1 }}>\r\n            {process.env.REACT_APP_NAME}\r\n          </Typography>\r\n          <IconButton\r\n            color=\"default\"\r\n            aria-label=\"settings\"\r\n            component=\"span\"\r\n            onClick={handleSettingsToggle}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n          <SettingsDrawer\r\n            onDrawerToggle={handleSettingsToggle}\r\n            open={settingsOpen}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LandingLayout;\r\n","import Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport {useAuth} from \"../../auth/contexts/AuthProvider\";\r\nimport LandingLayout from \"../components/LandingLayout\";\r\n\r\nconst features = [\r\n    {name: \"Bootstraped with Create React App\"},\r\n    {name: \"Components & Themes built on top of Material-UI\"},\r\n    {name: \"Data Fetching with React Query\"},\r\n    {name: \"Written in TypeScript\"},\r\n    {name: \"Real-world examples\"},\r\n    {name: \"Best Practices\"},\r\n    {name: \"MIT License\"},\r\n];\r\n\r\nconst Landing = () => {\r\n    const {userInfo} = useAuth();\r\n    const theme = useTheme();\r\n    const {t} = useTranslation();\r\n\r\n    return (\r\n        <LandingLayout>\r\n            <main>\r\n                <Box\r\n                    sx={{\r\n                        py: 6,\r\n                    }}\r\n                >\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography\r\n                            variant=\"h1\"\r\n                            align=\"center\"\r\n                            color=\"text.primary\"\r\n                            marginBottom={4}\r\n                        >\r\n                            {t(\"landing.title\")}\r\n                        </Typography>\r\n                        <Stack\r\n                            sx={{pt: 3}}\r\n                            direction=\"row\"\r\n                            spacing={2}\r\n                            justifyContent=\"center\"\r\n                        >\r\n                            {userInfo ? (\r\n                                <Button\r\n                                    component={RouterLink}\r\n                                    to={`/${process.env.PUBLIC_URL}/admin`}\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    {t(\"landing.cta.mainAuth\", {name: userInfo.firstName})}\r\n                                </Button>\r\n                            ) : (\r\n                                <Button\r\n                                    component={RouterLink}\r\n                                    to={`/${process.env.PUBLIC_URL}/login`}\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    {t(\"landing.cta.main\")}\r\n                                </Button>\r\n                            )}\r\n                        </Stack>\r\n                    </Container>\r\n                </Box>\r\n                <Container sx={{py: 6}} maxWidth=\"md\">\r\n                    <img\r\n                        alt=\"Application demo\"\r\n                        src={`img/template-${theme.palette.mode}.png`}\r\n                        style={{\r\n                            borderRadius: 24,\r\n                            borderStyle: \"solid\",\r\n                            borderWidth: 4,\r\n                            borderColor: theme.palette.background.default,\r\n                            width: \"100%\",\r\n                        }}\r\n                    />\r\n                </Container>\r\n                <Container sx={{py: 8}} maxWidth=\"md\">\r\n                    <Stack alignItems=\"center\">\r\n                        <Typography\r\n                            variant=\"h2\"\r\n                            align=\"center\"\r\n                            color=\"text.primary\"\r\n                            gutterBottom\r\n                        >\r\n                            {t(\"landing.features.title\")}\r\n                        </Typography>\r\n                        <List sx={{pt: 3}}>\r\n                            {features.map((feature, index) => (\r\n                                <ListItem key={index}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <StarIcon/>\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={feature.name}/>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        <Button\r\n                            component=\"a\"\r\n                            href={process.env.REACT_APP_SOURCE_LINK}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                            sx={{mt: 3}}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {t(\"landing.features.more\")}\r\n                        </Button>\r\n                    </Stack>\r\n                </Container>\r\n            </main>\r\n        </LandingLayout>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n"],"sourceRoot":""}